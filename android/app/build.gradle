plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.firu.pet"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def newApkName = "PetCare+-${variant.name}-${variant.versionName}.apk"
            output.outputFileName = newApkName
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.firu.pet"
        minSdkVersion 23
        minSdk = 23
        //noinspection ExpiredTargetSdkVersion
        targetSdk = 34 // Use the latest available version
        versionCode = 8
        versionName = "1.0.0"
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a"  // âœ… Keep only necessary ABIs
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            ndk {
                debugSymbolLevel 'FULL'
            }
        }
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "com.google.android.material:material:1.12.0"
    implementation platform('com.google.firebase:firebase-bom:33.9.0')
    implementation 'com.google.firebase:firebase-firestore'

    // Exclude firebase-iid to prevent duplicate class error
    implementation ('com.google.firebase:firebase-messaging') {
        exclude group: 'com.google.firebase', module: 'firebase-iid'
    }
    implementation("com.google.firebase:firebase-storage")
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.android.play:integrity:1.4.0'
    implementation 'com.google.android.exoplayer:exoplayer:2.19.1'
    implementation 'com.google.android.exoplayer:extension-mediasession:2.19.1'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
    implementation 'com.google.mlkit:text-recognition:16.0.0'  // Add missing dependencies
    mplementation 'org.tensorflow:tensorflow-lite:2.14.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.14.0'

}
configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'com.google.firebase' && details.requested.name == 'firebase-iid') {
            details.useVersion '21.1.0' // Ensure latest version
        }
    }
}


flutter {
    source = "../.."
}
apply plugin: 'com.google.gms.google-services'

